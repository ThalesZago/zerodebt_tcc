{"version":3,"file":"mat-select-filter.umd.js","sources":["ng://mat-select-filter/lib/mat-select-filter.service.ts","ng://mat-select-filter/lib/mat-select-filter.component.ts","ng://mat-select-filter/lib/mat-select-filter.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatSelectFilterService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input, EventEmitter, Output, ViewChild, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport {\n  A,\n  Z,\n  ZERO,\n  NINE,\n  SPACE, END, HOME,\n} from '@angular/cdk/keycodes';\n@Component({\n  selector: 'mat-select-filter',\n  template: `\n  <form [formGroup]=\"searchForm\" class=\"mat-filter\" [ngStyle]=\"{'background-color': color ? color : 'white'}\">\n  <div>\n  <input #input class=\"mat-filter-input\" matInput placeholder=\"{{placeholder}}\" formControlName=\"value\" (keydown)=\"handleKeydown($event)\">\n    <mat-spinner *ngIf=\"localSpinner\" class=\"spinner\" diameter=\"16\"></mat-spinner>\n  </div>\n  <div *ngIf=\"noResults\"\n     class=\"noResultsMessage\">\n  {{noResultsMessage}}\n</div>\n</form>\n  `,\n  styleUrls: ['./mat-select-filter.component.scss']\n})\nexport class MatSelectFilterComponent implements OnInit, OnDestroy {\n  @ViewChild('input', { static: true }) input;\n\n  @Input('array') array: any;\n  @Input('placeholder') placeholder: string;\n  @Input('color') color: string;\n  @Input('displayMember') displayMember: string;\n  @Input('showSpinner') showSpinner = true;\n  @Input('noResultsMessage') noResultsMessage = 'No results';\n  @Input('hasGroup') hasGroup: boolean;\n  @Input('groupArrayName') groupArrayName: string;\n\n  noResults = false;\n\n  localSpinner = false;\n  @Output() filteredReturn = new EventEmitter<any>();\n\n  public filteredItems: any = [];\n  public searchForm: FormGroup;\n\n  constructor(fb: FormBuilder) {\n    this.searchForm = fb.group({\n      value: ''\n    });\n  }\n\n  ngOnInit() {\n    this.searchForm.valueChanges.subscribe(value => {\n      if (this.showSpinner) {\n        this.localSpinner = true;\n      }\n      if (value['value']) {\n        // IF THE DISPLAY MEMBER INPUT IS SET WE CHECK THE SPECIFIC PROPERTY\n        if (this.displayMember == null) {\n          this.filteredItems = this.array.filter(name => name.toLowerCase().includes(value['value'].toLowerCase()));\n          // OTHERWISE, WE CHECK THE ENTIRE STRING\n        } else if (this.hasGroup && this.groupArrayName && this.displayMember) {\n          this.filteredItems = this.array.map(a => {\n            const objCopy = Object.assign({}, a);\n            objCopy[this.groupArrayName] = objCopy[this.groupArrayName].filter(g => g[this.displayMember].toLowerCase().includes(value['value'].toLowerCase()));\n            return objCopy;\n          }).filter(x => x[this.groupArrayName].length > 0);\n        } else {\n          this.filteredItems = this.array.filter(name => name[this.displayMember].toLowerCase().includes(value['value'].toLowerCase()));\n        }\n        // NO RESULTS VALIDATION\n\n        this.noResults = this.filteredItems == null || this.filteredItems.length === 0;\n\n\n      } else {\n        this.filteredItems = this.array.slice();\n        this.noResults = false;\n      }\n      this.filteredReturn.emit(this.filteredItems);\n      setTimeout(() => {\n        if (this.showSpinner) {\n          this.localSpinner = false;\n        }\n      }, 2000);\n    });\n\n    setTimeout(() => {\n      this.input.nativeElement.focus();\n    }, 500);\n    if (!this.placeholder) {\n      this.placeholder = 'Search...';\n    }\n  }\n\n  handleKeydown(event: KeyboardEvent) {\n    // PREVENT PROPAGATION FOR ALL ALPHANUMERIC CHARACTERS IN ORDER TO AVOID SELECTION ISSUES\n    if ((event.key && event.key.length === 1) ||\n      (event.keyCode >= A && event.keyCode <= Z) ||\n      (event.keyCode >= ZERO && event.keyCode <= NINE) ||\n      (event.keyCode === SPACE)) {\n      event.stopPropagation();\n    }\n  }\n  ngOnDestroy() {\n    this.filteredReturn.emit(this.array);\n  }\n}\n","import { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectFilterComponent } from './mat-select-filter.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [MatSelectFilterComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatProgressSpinnerModule\n  ],\n  exports: [MatSelectFilterComponent]\n})\nexport class MatSelectFilterModule { }\n"],"names":["Injectable","EventEmitter","A","Z","ZERO","NINE","SPACE","Component","FormBuilder","ViewChild","Input","Output","NgModule","CommonModule","FormsModule","ReactiveFormsModule","MatProgressSpinnerModule"],"mappings":"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"}